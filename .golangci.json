{
	"version": "2",
	"formatters": {
		"enable": [
			"gofmt",
			"gofumpt"
		],
		"exclusions": {
			"generated": "lax",
			"paths": [
				".*\\.my\\.go$",
				"lib/bad.go",
				".make",
				".devcontainer",
				".vscode",
				"dist",
				"third_party$",
				"builtin$"
			]
		},
		"settings": {
			"gci": {
				"sections": [
					"standard",
					"default",
					"prefix(github.com/bsv-blockchain/go-bt)"
				]
			},
			"gofmt": {
				"simplify": true
			},
			"gofumpt": {
				"extra-rules": false
			},
			"goimports": {
				"local-prefixes": [
					"github.com/bsv-blockchain/go-bt"
				]
			}
		}
	},
	"issues": {
		"max-issues-per-linter": 0,
		"max-same-issues": 0,
		"new": false,
		"new-from-rev": "",
		"uniq-by-line": true
	},
	"linters": {
		"disable": [
			"err113",
			"funcorder",
			"gochecknoglobals",
			"gocognit",
			"gocritic",
			"gocyclo",
			"godot",
			"godox",
			"inamedparam",
			"nestif",
			"recvcheck",
			"wsl_v5"
		],
		"enable": [
			"arangolint",
			"asasalint",
			"asciicheck",
			"bidichk",
			"bodyclose",
			"containedctx",
			"contextcheck",
			"copyloopvar",
			"dogsled",
			"durationcheck",
			"embeddedstructfieldcheck",
			"errcheck",
			"errchkjson",
			"errname",
			"errorlint",
			"exhaustive",
			"forbidigo",
			"gocheckcompilerdirectives",
			"gochecknoglobals",
			"gochecknoinits",
			"gochecksumtype",
			"goconst",
			"goheader",
			"gomoddirectives",
			"gosec",
			"gosmopolitan",
			"govet",
			"inamedparam",
			"ineffassign",
			"loggercheck",
			"makezero",
			"mirror",
			"misspell",
			"musttag",
			"nakedret",
			"nilerr",
			"nilnesserr",
			"nilnil",
			"noctx",
			"nolintlint",
			"nosprintfhostport",
			"prealloc",
			"predeclared",
			"protogetter",
			"reassign",
			"recvcheck",
			"revive",
			"rowserrcheck",
			"spancheck",
			"sqlclosecheck",
			"staticcheck",
			"testifylint",
			"unconvert",
			"unparam",
			"unused",
			"wastedassign",
			"zerologlint"
		],
		"exclusions": {
			"generated": "lax",
			"paths": [
				".*\\.my\\.go$",
				"lib/bad.go",
				".github",
				".make",
				"dist",
				"third_party$",
				"builtin$",
				"examples$"
			],
			"rules": [
				{
					"linters": [
						"gocyclo"
					],
					"path": "_test\\.go"
				},
				{
					"linters": [
						"gosec"
					],
					"text": "G115:"
				},
				{
					"linters": [
						"gosec"
					],
					"text": "G507: Blocklisted"
				},
				{
					"linters": [
						"testifylint"
					],
					"text": "suite-subtest-run: use ts.Run to run subtest"
				},
				{
					"linters": [
						"scopelint"
					],
					"text": "Using the variable on range scope"
				},
				{
					"linters": [
						"lll"
					],
					"source": "^//go:generate "
				},
				{
					"path": "(.+)\\.go$",
					"text": "abcdef"
				}
			]
		},
		"settings": {
			"dogsled": {
				"max-blank-identifiers": 2
			},
			"dupl": {
				"threshold": 100
			},
			"exhaustive": {
				"default-signifies-exhaustive": false
			},
			"funlen": {
				"lines": 60,
				"statements": 40
			},
			"gocognit": {
				"min-complexity": 10
			},
			"goconst": {
				"min-len": 3,
				"min-occurrences": 10
			},
			"gocritic": {
				"disabled-checks": [
					"regexpMust"
				],
				"disabled-tags": [
					"experimental"
				],
				"enabled-tags": [
					"performance"
				],
				"settings": {
					"captLocal": {
						"paramsOnly": true
					},
					"rangeValCopy": {
						"sizeThreshold": 32
					}
				}
			},
			"gocyclo": {
				"min-complexity": 10
			},
			"godox": {
				"keywords": [
					"NOTE",
					"OPTIMIZE",
					"HACK"
				]
			},
			"govet": {
				"disable-all": false,
				"enable": [
					"atomicalign",
					"shadow"
				],
				"enable-all": false,
				"settings": {
					"printf": {
						"funcs": [
							"(github.com/golangci/golangci-lint/pkg/logutils.Log).Infof",
							"(github.com/golangci/golangci-lint/pkg/logutils.Log).Warnf",
							"(github.com/golangci/golangci-lint/pkg/logutils.Log).Errorf",
							"(github.com/golangci/golangci-lint/pkg/logutils.Log).Fatalf"
						]
					}
				}
			},
			"lll": {
				"line-length": 120,
				"tab-width": 1
			},
			"misspell": {
				"ignore-rules": [
					"bsv",
					"bitcoin",
					"serialise",
					"initialise",
					"finalised",
					"initialised"
				],
				"locale": "US"
			},
			"nakedret": {
				"max-func-lines": 30
			},
			"nestif": {
				"min-complexity": 4
			},
			"nolintlint": {
				"allow-unused": false,
				"require-explanation": true,
				"require-specific": true
			},
			"prealloc": {
				"for-loops": false,
				"range-loops": true,
				"simple": true
			},
			"rowserrcheck": {
				"packages": [
					"github.com/jmoiron/sqlx"
				]
			},
			"testpackage": {
				"skip-regexp": "(export|internal)_test\\.go"
			},
			"unparam": {
				"check-exported": false
			},
			"whitespace": {
				"multi-func": false,
				"multi-if": false
			},
			"wsl": {
				"allow-assign-and-call": true,
				"allow-cuddle-declarations": true,
				"allow-multiline-assign": true,
				"allow-separated-leading-comment": false,
				"allow-trailing-comment": false,
				"force-case-trailing-whitespace": 0,
				"force-err-cuddling": false,
				"strict-append": true
			}
		}
	},
	"output": {
		"formats": {
			"text": {
				"path": "stdout",
				"print-issued-lines": true,
				"print-linter-name": true
			}
		},
		"path-prefix": ""
	},
	"run": {
		"allow-parallel-runners": true,
		"concurrency": 8,
		"issues-exit-code": 1,
		"tests": true
	},
	"severity": {
		"default": "warning",
		"rules": [
			{
				"linters": [
					"dupl",
					"misspell",
					"makezero"
				],
				"severity": "info"
			}
		]
	}
}
